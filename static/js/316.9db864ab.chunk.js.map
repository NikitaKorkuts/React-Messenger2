{"version":3,"file":"static/js/316.9db864ab.chunk.js","mappings":"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","sources":["assets/icons/checkmark.svg","hocs/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://messanger/./src/components/screens/Dialogs/dialogs.module.scss?2696","utils/dates/getFormattedLastDialogActivityDate.tsx","components/screens/Dialogs/DialogItem.tsx","components/screens/Dialogs/Dialogs.tsx","components/screens/Dialogs/DialogsContainer.tsx","pages/Dialogs/DialogsPage.tsx","utils/dates/getFormattedDateHMM.tsx","utils/dates/getFormattedDateWithFullMonth.ts"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckmark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 12.116l2.053-1.897c2.401 1.162 3.924 2.045 6.622 3.969 5.073-5.757 8.426-8.678 14.657-12.555l.668 1.536c-5.139 4.484-8.902 9.479-14.321 19.198-3.343-3.936-5.574-6.446-9.679-10.251z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckmark);\nexport default __webpack_public_path__ + \"static/media/checkmark.5d458d8e9d3a848de5d7562db61e3ea8.svg\";\nexport { ForwardRef as ReactComponent };","import React, {FunctionComponent} from 'react';\nimport {Navigate} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {AppStateType} from '../store/store.types';\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n});\n\ntype MapStatePropsType = ReturnType<typeof mapStateToPropsForRedirect>\n\nexport const withAuthRedirect = <WCP extends object>(WrappedComponent: React.ComponentType<WCP>) => {\n    const RedirectComponent: FunctionComponent<MapStatePropsType> = (props) => {\n        const {isAuth, ...restProps} = props;\n        if (!props.isAuth) return <Navigate to={'/login'}/>;\n        return <WrappedComponent {...restProps as WCP} />;\n    };\n\n    return connect<MapStatePropsType, {}, WCP, AppStateType>(mapStateToPropsForRedirect)(RedirectComponent);\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__MkfWI\",\"noDialogs\":\"dialogs_noDialogs__BINIL\",\"dialog\":\"dialogs_dialog__87380\",\"dialogMain\":\"dialogs_dialogMain__6K+yH\",\"avatar\":\"dialogs_avatar__0yRSR\",\"userInfo\":\"dialogs_userInfo__1j8Qp\",\"userName\":\"dialogs_userName__KyzWK\",\"lastMessage\":\"dialogs_lastMessage__5Cvht\",\"lastMessageBody\":\"dialogs_lastMessageBody__cF8B8\",\"lastMessageSender\":\"dialogs_lastMessageSender__fmoJ6\",\"isLastMessageViewed\":\"dialogs_isLastMessageViewed__fdPJY\",\"viewed\":\"dialogs_viewed__PY2x0\",\"newMessagesCount\":\"dialogs_newMessagesCount__Y-lAK\",\"lastDialogActivityDate\":\"dialogs_lastDialogActivityDate__Glr1H\"};","import {getFormattedDateHMM} from './getFormattedDateHMM';\nimport {getFormattedDateWithFullMonth} from './getFormattedDateWithFullMonth';\n\nexport const getFormattedLastDialogActivityDate = (date: Date) => {\n    const nowDate = new Date();\n    const areDaysSame = nowDate.getDate() === date.getDate();\n    const areMonthsSame = nowDate.getMonth() === date.getMonth();\n    const areYearSame = nowDate.getFullYear() === date.getFullYear();\n    const time = getFormattedDateHMM(date);\n    const newDate = getFormattedDateWithFullMonth(date);\n\n    if(areDaysSame && areMonthsSame && areYearSame) {\n        return `Сегодня в ${time}`;\n    } else if (nowDate.getDate() === date.getDate()-1 && areMonthsSame && areYearSame) {\n        return `Вчера в ${time}`;\n    } else if (!areYearSame) {\n        return `${newDate} г.`;\n    } else {\n        return `${newDate} ${time}`;\n    }\n};","import React, {FC} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport defaultAvatar from '../../../assets/images/defaultAvatar.png';\nimport {getFormattedLastDialogActivityDate} from '../../../utils/dates/getFormattedLastDialogActivityDate';\nimport {ReactComponent as CheckmarkIcon} from '../../../assets/icons/checkmark.svg';\n\nimport s from './dialogs.module.scss';\nimport {DialogItemPropsType} from './dialogs.types';\n\n\nexport const DialogItem: FC<DialogItemPropsType> = ({dialog, authUserId}) => {\n    const isSameSender = dialog.lastMessage?.senderId === authUserId;\n\n    const getUserAvatar = () => {\n        const avatar = dialog.photos.small;\n        return <img className={s.avatar} src={avatar ? avatar : defaultAvatar} alt=\"avatar\"/>;\n    };\n\n    const getLastMessage = () => {\n        const lastMsg = dialog.lastMessage;\n\n        if (dialog.hasNewMessages) {\n            return 'Новое сообщение';\n        } else if (!lastMsg) {\n            return 'Нет сообщений';\n        } else {\n            return (\n                <>\n                    <CheckmarkIcon\n                        className={`${s.isLastMessageViewed} ${lastMsg.viewed ? s.viewed : ''}`}\n                    />\n                    {lastMsg.senderName && (\n                        <>\n                            <span className={s.lastMessageSender}>\n                                {`${isSameSender ? 'Вы' : lastMsg.senderName}: `}\n                            </span>\n                        </>\n                    )}\n                    {dialog.lastMessage.body}\n                </>\n            );\n        }\n    };\n\n    return (\n        <Link\n            to={'/dialog/' + dialog.id}\n            className={s.dialog}\n        >\n            <div className={s.dialogMain}>\n                {getUserAvatar()}\n                <div className={s.userInfo}>\n                    <p className={s.userName}>{dialog.userName}</p>\n                    <div className={s.lastMessage}>\n                        <p className={s.lastMessageBody}>\n                            {getLastMessage()}\n                        </p>\n                    </div>\n                </div>\n                {dialog.hasNewMessages && (\n                    <div className={s.newMessagesCount}>\n                        {dialog.newMessagesCount}\n                    </div>\n                )}\n                {!dialog.lastMessage?.viewed && !dialog.hasNewMessages && (\n                    <div className={s.notViewedMessage}></div>\n                )}\n            </div>\n            <div className={s.lastDialogActivityDate}>\n                <p >\n                    {getFormattedLastDialogActivityDate(dialog.lastDialogActivityDate)}\n                </p>\n            </div>\n        </Link>\n    );\n};","import React, {FC} from 'react';\n\nimport s from './dialogs.module.scss';\nimport {DialogsPropsType} from './dialogs.types';\nimport {DialogItem} from './DialogItem';\n\nexport const Dialogs: FC<DialogsPropsType> = ({dialogs, authUserId}) => {\n    return (\n        <div className={s.dialogs}>\n            {dialogs.map((dialog) => {\n                return <DialogItem\n                    key={dialog.id}\n                    dialog={dialog}\n                    authUserId={authUserId}\n                />;\n            })}\n            {dialogs.length === 0 && (\n                <span className={s.noDialogs}>\n                    Нет диалогов\n                </span>\n            )}\n        </div>\n    );\n};","import {connect} from 'react-redux';\nimport {Component} from 'react';\nimport {compose} from 'redux';\n\nimport {AppStateType} from '../../../store/store.types';\nimport {getDialogs, getNewMessagesCount} from '../../../store/dialogs/dialogs.actions';\nimport {withAuthRedirect} from '../../../hocs/withAuthRedirect';\n\nimport {Dialogs} from './Dialogs';\nimport {DialogsContainerPropsType} from './dialogs.types';\n\nclass DialogsContainer extends Component<DialogsContainerPropsType> {\n    componentDidMount() {\n        const {getDialogs} = this.props;\n\n        getDialogs();\n    }\n\n    componentDidUpdate(prevProps: DialogsContainerPropsType) {\n        const {getDialogs, newMessagesCount} = this.props;\n\n        if (prevProps.newMessagesCount !== newMessagesCount) {\n            getDialogs();\n        }\n    }\n\n    render() {\n        const {dialogs, authUserId} = this.props;\n\n        return (\n            <Dialogs\n                dialogs={dialogs}\n                authUserId={authUserId}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        dialogs: state.dialogs.dialogs,\n        authUserId: state.auth.userId,\n        newMessagesCount: state.dialogs.newMessagesCount,\n    };\n};\n\nexport default compose<React.ComponentType>(withAuthRedirect, connect(mapStateToProps, {\n    getDialogs,\n    getNewMessagesCount,\n}))(DialogsContainer);","import React from 'react';\n\nimport DialogsContainer from '../../components/screens/Dialogs/DialogsContainer';\n\nconst DialogsPage = () => {\n    return (\n        <>\n            <DialogsContainer/>\n        </>\n    );\n};\n\nexport default DialogsPage;\n","export const getFormattedDateHMM = (date: Date) => {\n    return `${date.getHours()}:${(date.getMinutes() < 10 ? '0' : '') + date.getMinutes()}`;\n};","export const getFormattedDateWithFullMonth = (date: Date) => {\n    const currentYear = new Date().getFullYear();\n    const month = date.toLocaleString('default', { month: 'short' });\n    const format1 = `${date.getDate()} ${month}`;\n    const format2 = `${date.getDate()} ${month} ${date.getFullYear()}`;\n\n    return currentYear === date.getFullYear() ? format1 : format2;\n};"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCheckmark","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","d","ForwardRef","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","restProps","objectWithoutPropertiesLoose","to","getFormattedLastDialogActivityDate","date","nowDate","Date","areDaysSame","getDate","areMonthsSame","getMonth","areYearSame","getFullYear","time","getFormattedDateHMM","newDate","getFormattedDateWithFullMonth","DialogItem","dialog","authUserId","isSameSender","lastMessage","senderId","className","s","avatar","photos","small","src","defaultAvatar","alt","getUserAvatar","userName","lastMsg","hasNewMessages","viewed","senderName","body","getLastMessage","newMessagesCount","lastDialogActivityDate","Dialogs","dialogs","map","DialogsContainer","getDialogs","prevProps","Component","compose","userId","getNewMessagesCount","getHours","getMinutes","currentYear","month","toLocaleString","format1","format2"],"sourceRoot":""}