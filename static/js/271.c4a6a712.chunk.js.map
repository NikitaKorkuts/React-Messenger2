{"version":3,"file":"static/js/271.c4a6a712.chunk.js","mappings":"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","sources":["hocs/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://messanger/./src/components/shared/Pagination/pagination.module.scss?46e7","components/shared/Pagination/Pagination.tsx","webpack://messanger/./src/components/screens/Users/user.module.scss?63ef","components/screens/Users/UserItem.tsx","webpack://messanger/./src/components/screens/Users/UsersSearchForm/usersSearchForm.module.scss?3ee5","components/screens/Users/UsersSearchForm/UsersSearchForm.tsx","components/screens/Users/Users.tsx","components/screens/Users/UsersContainer.tsx","pages/Users/UsersPage.tsx"],"sourcesContent":["import React, {FunctionComponent} from 'react';\nimport {Navigate} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {AppStateType} from '../store/store.types';\n\nconst mapStateToPropsForRedirect = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n});\n\ntype MapStatePropsType = ReturnType<typeof mapStateToPropsForRedirect>\n\nexport const withAuthRedirect = <WCP extends object>(WrappedComponent: React.ComponentType<WCP>) => {\n    const RedirectComponent: FunctionComponent<MapStatePropsType> = (props) => {\n        const {isAuth, ...restProps} = props;\n        if (!props.isAuth) return <Navigate to={'/login'}/>;\n        return <WrappedComponent {...restProps as WCP} />;\n    };\n\n    return connect<MapStatePropsType, {}, WCP, AppStateType>(mapStateToPropsForRedirect)(RedirectComponent);\n};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"pagination_pagination__NWD3s\",\"active\":\"pagination_active__gDMHS\"};","import React, {FC} from 'react';\n\nimport {PropsType} from './pagination.types';\nimport s from './pagination.module.scss';\n\nexport const Pagination: FC<PropsType> = ({\n    filter,\n    totalItemsCount,\n    currentPage,\n    onPageChanged,\n    pageSize,\n    halfPaginationSize = 4,\n}) => {\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let minPage = currentPage - halfPaginationSize;\n    if (minPage < 1) {\n        minPage = 1;\n    }\n\n    let maxPage = currentPage + halfPaginationSize;\n    if (maxPage > pagesCount) {\n        maxPage = pagesCount;\n    }\n\n    let previousPage = currentPage - 1;\n    if (previousPage < 1) {\n        previousPage = 1;\n    }\n\n    let nextPage = currentPage + 1;\n    if (nextPage > pagesCount) {\n        nextPage = currentPage;\n    }\n\n    const pages = [];\n    for (let i = minPage; i <= maxPage; i++) {\n        const page = (\n            <span\n                onClick={() => onPageChanged(i, filter)}\n                key={i}\n                className={i === currentPage ? s.active : undefined}\n            >\n                {i}\n            </span>\n        );\n        pages.push(page);\n    }\n\n    return (\n        <div className={`${s.pagination}`}>\n            <span\n                onClick={() => onPageChanged(1, filter)}\n            >\n                &laquo;\n            </span>\n            &nbsp;\n            <span\n                onClick={() => onPageChanged(previousPage, filter)}\n            >\n                &lt;\n            </span>\n            {pages}\n            <span\n                onClick={() => onPageChanged(nextPage, filter)}\n            >\n                &gt;\n            </span>\n            &nbsp;\n            <span\n                onClick={() => onPageChanged(pagesCount, filter)}\n            >\n                &raquo;\n            </span>\n        </div>\n    );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"user_users__sl0FE\",\"user\":\"user_user__FSDqa\",\"actions\":\"user_actions__KT+lk\",\"follow\":\"user_follow__tW65d\",\"followBtn\":\"user_followBtn__clwqK\",\"startChatting\":\"user_startChatting__1CkiK\",\"startChattingBtn\":\"user_startChattingBtn__I-Qn3\",\"mainPart\":\"user_mainPart__bxOc1\",\"leftSide\":\"user_leftSide__CfNap\",\"userInfo\":\"user_userInfo__6v2NK\",\"infoName\":\"user_infoName__APSq2\",\"profileLink\":\"user_profileLink__2Lk8x\",\"infoStatus\":\"user_infoStatus__4w42y\",\"status\":\"user_status__tCN6f\",\"isFollowing\":\"user_isFollowing__bdv0W\",\"userAvatar\":\"user_userAvatar__qYymd\",\"avatarImg\":\"user_avatarImg__rPeih\"};","import React, {FC} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {UserItemPropsType} from './users.types';\nimport s from './user.module.scss';\n\nexport const UserItem: FC<UserItemPropsType> = ({\n    imgUrl,\n    name,\n    isFriend,\n    isFollowingInProgress,\n    follow,\n    id,\n    unfollow,\n    status,\n}) => {\n    const onAddToFriends = () => {\n        follow(id);\n    };\n    const onRemoveFromFriends = () => {\n        unfollow(id);\n    };\n    const getFollowButton = () => {\n        if (isFriend) {\n            return (\n                <div className={s.follow}>\n                    <button\n                        disabled={isFollowingInProgress.some(userId => userId === id)}\n                        onClick={onRemoveFromFriends}\n                        className={s.followBtn}\n                    >\n                        Отписаться\n                    </button>\n                </div>\n            );\n        } else {\n            return (\n                <div className={s.follow}>\n                    <button\n                        disabled={isFollowingInProgress.some(userId => userId === id)}\n                        onClick={onAddToFriends}\n                        className={s.followBtn}\n                    >\n                        Подписаться\n                    </button>\n                </div>\n            );\n        }\n    };\n\n    const getIsFollowing = () => {\n        if(isFriend) {\n            return <span className={s.yourFriend} >&#10003; Вы подписаны</span>;\n        }\n    };\n\n    return (\n        <div className={s.user}>\n            <div className={s.mainPart}>\n                <div className={s.leftSide}>\n                    <div className={s.userAvatar}>\n                        <Link to={`/profile/${id}`}>\n                            <img className={s.avatarImg} alt=\"UserAvatar\" src={imgUrl}/>\n                        </Link>\n                    </div>\n                    <div className={s.userInfo}>\n                        <div className={s.infoName}>\n                            <Link className={s.profileLink} to={`/profile/${id}`}>\n                                <p>{name}</p>\n                            </Link>\n                        </div>\n                        <div className={s.infoStatus}>\n                            <p className={s.status}>\n                                {status?.slice(0, 20)}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className={s.isFollowing}>\n                    {getIsFollowing()}\n                </div>\n            </div>\n\n            <div className={s.actions}>\n                {getFollowButton()}\n                <div className={s.startChatting}>\n                    <Link to={`/dialog/${id}`}>\n                        <button className={s.startChattingBtn}>\n                            Написать сообщение\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"usersSearch\":\"usersSearchForm_usersSearch__z4Qa-\",\"searchIcon\":\"usersSearchForm_searchIcon__0D1uC\",\"searchForm\":\"usersSearchForm_searchForm__TiweS\",\"searchOptions\":\"usersSearchForm_searchOptions__L28ga\"};","import {ChangeEvent, FC} from 'react';\nimport {Field, Form, Formik} from 'formik';\n\nimport {FilterType} from '../../../../store/users/users.types';\nimport {ReactComponent as SearcIcon} from '../../../../assets/icons/search-icon.svg';\n\nimport s from './usersSearchForm.module.scss';\nimport {FormType, FriendType, handleSelectChangeType, UsersSearchFormPropsType} from './usersSearchForm.types';\n\nexport const UsersSearchForm: FC<UsersSearchFormPropsType> = ({\n    onFilterChanged,\n    filter,\n}) => {\n\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        let friend;\n        switch (values.friend) {\n        case 'null':\n            friend = null;\n            break;\n        case 'false':\n            friend = false;\n            break;\n        case 'true':\n            friend = true;\n            break;\n        }\n\n        const filter: FilterType = {\n            term: values.term,\n            friend: friend,\n        };\n\n        onFilterChanged(filter);\n        setSubmitting(false);\n    };\n\n    const handleSelectChange: handleSelectChangeType = (e, {isSubmitting, values, setSubmitting}) => {\n        e.persist();\n        if (!isSubmitting) {\n            submit({...values, friend: e.target.value as FriendType}, {setSubmitting});\n        }\n    };\n\n\n    return (\n        <div className={s.usersSearchForm}>\n            <Formik\n                enableReinitialize={true}\n                initialValues={{term: filter.term, friend: String(filter.friend) as FriendType}}\n                onSubmit={submit}\n            >\n                {({isSubmitting, values, setSubmitting}) => (\n                    <Form className={s.usersSearch}>\n                        <SearcIcon\n                            className={s.searchIcon}\n                            onClick={!isSubmitting ? () => submit(values, {setSubmitting}) : () => {\n                            }}\n                        />\n                        <Field\n                            placeholder=\"Искать...\"\n                            className={s.searchForm}\n                            type=\"\"\n                            name=\"term\"\n                            // autoFocus={true}\n                        />\n\n                        <Field\n                            name=\"friend\"\n                            as=\"select\"\n                            className={s.searchOptions}\n                            onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n                                handleSelectChange(e, {setSubmitting, isSubmitting, values});\n                            }}\n                        >\n                            <option\n                                className={s.searchOption}\n                                value=\"null\"\n                            >\n                                Все пользователи\n                            </option>\n                            <option\n                                className={s.searchOption}\n                                value=\"true\"\n                            >\n                                Среди подписок\n                            </option>\n                            <option\n                                className={s.searchOption}\n                                value=\"false\"\n                            >\n                                Кроме подписок\n                            </option>\n                        </Field>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    );\n};","import React, {FC} from 'react';\n\nimport defaultAvatar from '../../../assets/images/defaultAvatar.png';\nimport {Pagination} from '../../shared/Pagination/Pagination';\nimport {FilterType} from '../../../store/users/users.types';\n\nimport {UsersPropsType} from './users.types';\nimport {UserItem} from './UserItem';\nimport {UsersSearchForm} from './UsersSearchForm/UsersSearchForm';\nimport s from './user.module.scss';\n\nexport const Users: FC<UsersPropsType> = ({\n    users,\n    requestUsers,\n    filter,\n    setCurrentPage,\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    isFollowingInProgress,\n    unfollow,\n    follow,\n}) => {\n\n    const UserElements = (users).map(u => {\n        return (\n            <UserItem\n                id={u.id}\n                imgUrl={u.photos.small !== null ? u.photos.small : defaultAvatar}\n                name={u.name}\n                key={u.id}\n                isFriend={u.followed}\n                isFollowingInProgress={isFollowingInProgress}\n                unfollow={unfollow}\n                follow={follow}\n                status={u.status}\n            />);\n    },\n    );\n\n    const onPageChanged = (page: number) => {\n        setCurrentPage(page);\n        requestUsers(page, pageSize, filter);\n    };\n\n    const onFilterChanged = (filter: FilterType) => {\n        requestUsers(1, pageSize, filter);\n    };\n\n    return (\n        <div>\n            <UsersSearchForm\n                onFilterChanged={onFilterChanged}\n                filter={filter}\n            />\n            {totalUsersCount/pageSize > 1 && (\n                <Pagination\n                    totalItemsCount={totalUsersCount}\n                    currentPage={currentPage}\n                    onPageChanged={onPageChanged}\n                    pageSize={pageSize}\n                    filter={filter}\n                />\n            )}\n            <div className={s.users}>\n                {UserElements}\n            </div>\n\n        </div>\n    );\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nimport {Preloader} from '../../shared/Preloader/Preloader';\nimport {withRouter} from '../../../hocs/withRouter';\nimport {AppStateType} from '../../../store/store.types';\nimport {RouterType} from '../../../types/types';\nimport {follow, requestUsers, unfollow, usersActions} from '../../../store/users/users.actions';\nimport {withAuthRedirect} from '../../../hocs/withAuthRedirect';\n\nimport {UsersContainerPropsType} from './users.types';\nimport {Users} from './Users';\n\nclass UsersContainer extends Component<RouterType & UsersContainerPropsType> {\n\n    componentDidMount() {\n        const {filter, currentPage, pageSize, router, requestUsers} = this.props;\n\n        const search = new URLSearchParams(router.location.search);\n\n        let actualPage = currentPage;\n        let actualFilter = filter;\n\n        if (!!search.get('page')) actualPage = Number(search.get('page'));\n        if (!!search.get('term')) actualFilter = {...actualFilter, term: search.get('term') as string};\n        switch (search.get('friend')) {\n        case 'null':\n            actualFilter = {...actualFilter, friend: null};\n            break;\n        case 'false':\n            actualFilter = {...actualFilter, friend: false};\n            break;\n        case 'true':\n            actualFilter = {...actualFilter, friend: true};\n            break;\n        }\n        requestUsers(actualPage, pageSize, actualFilter);\n    }\n\n    componentDidUpdate(prevProps: RouterType & UsersContainerPropsType) {\n        const {filter, currentPage, router} = this.props;\n\n        if(filter !== prevProps.filter || currentPage !== prevProps.currentPage) {\n            const queryParams: any = {};\n\n            if (!!filter.term) queryParams.term = filter.term;\n            if (filter.friend !== null) queryParams.friend = String(filter.friend);\n            if (currentPage !== 1) queryParams.page = String(currentPage);\n\n            const queryString = new URLSearchParams(queryParams).toString();\n\n            router.navigate({\n                search: '?' + queryString,\n            });\n        }\n    }\n\n    render() {\n        const {\n            isFetching,\n            users,\n            totalUsersCount,\n            currentPage,\n            pageSize,\n            filter,\n            setCurrentPage,\n            requestUsers,\n            isFollowingInProgress,\n            unfollow,\n            follow,\n        } = this.props;\n\n        if (isFetching) {\n            return <Preloader/>;\n        }\n        return (\n            <Users\n                users={users}\n                totalUsersCount={totalUsersCount}\n                currentPage={currentPage}\n                pageSize={pageSize}\n                filter={filter}\n                setCurrentPage={setCurrentPage}\n                requestUsers={requestUsers}\n                isFollowingInProgress={isFollowingInProgress}\n                unfollow={unfollow}\n                follow={follow}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isFetching: state.users.isFetching,\n    users: state.users.users,\n    totalUsersCount: state.users.totalUsersCount,\n    currentPage: state.users.currentPage,\n    pageSize: state.users.pageSize,\n    filter: state.users.filter,\n    isFollowingInProgress: state.users.isFollowingInProgress,\n});\n\n\nexport default compose<React.ComponentType>(withRouter, withAuthRedirect, connect(mapStateToProps, {\n    requestUsers,\n    setCurrentPage: usersActions.setCurrentPage,\n    follow,\n    unfollow,\n}))(UsersContainer);","import React from 'react';\n\nimport UsersContainer from '../../components/screens/Users/UsersContainer';\n\nconst UsersPage = () => {\n    return (\n        <div>\n            <UsersContainer />\n        </div>\n    );\n};\n\nexport default UsersPage;"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","WrappedComponent","connect","props","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","to","Pagination","filter","totalItemsCount","currentPage","onPageChanged","pageSize","halfPaginationSize","pagesCount","Math","ceil","minPage","maxPage","previousPage","nextPage","pages","page","onClick","className","s","undefined","push","UserItem","imgUrl","name","isFriend","isFollowingInProgress","follow","id","unfollow","status","onAddToFriends","onRemoveFromFriends","alt","src","slice","getIsFollowing","disabled","some","userId","UsersSearchForm","onFilterChanged","submit","values","friend","setSubmitting","term","enableReinitialize","initialValues","String","onSubmit","isSubmitting","placeholder","type","as","onChange","e","persist","value","handleSelectChange","Users","users","requestUsers","setCurrentPage","totalUsersCount","UserElements","map","u","photos","small","defaultAvatar","followed","UsersContainer","this","router","search","URLSearchParams","location","actualPage","actualFilter","get","Number","prevProps","queryParams","queryString","toString","navigate","isFetching","Preloader","Component","compose","withRouter","usersActions"],"sourceRoot":""}